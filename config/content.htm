<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h2>Rust</h2>
<p></p>
<p><span>1.</span><a href="https://www.rust-lang.org/zh-TW/tools/install">安裝</a></p>
<p></p>
<p>2.<a href="https://rust-lang.tw/book-tw/title-page.html">中文入門</a></p>
<p></p>
<p>3.<a href="https://www.bilibili.com/video/BV1hp4y1k7SV?p=1">教學影片</a></p>
<p></p>
<p></p>
<p></p>
<p></p>
<h3>Rust_src</h3>
<p></p>
<p>1.<a href="https://gist.githubusercontent.com/41023146/01f9ebf316fb0333e341f1bbb950d68d/raw/19e5b14cc3549dcef140bbd2bf0e54b1af00cc90/Rust">hello_world</a></p>
<p>2.<a href="https://gist.githubusercontent.com/41023146/9f1ac36c4c187ca37996f221e7f1206e/raw/03bfea2ef0020c83e1a93a6ac52a7ceae3c7665c/Rust">string和str</a></p>
<p>3.<a href="https://gist.githubusercontent.com/41023146/3574bd45f15294249ccc0e53afb1de2c/raw/2c4375ba62ead8288263432ee38745cc99c19de8/Rust">guess</a></p>
<p>4.<a href="https://gist.githubusercontent.com/41023146/14ddf3b4999e13d5c3d8cb659eea1057/raw/60f4bff6e9b4e51f89909cd7b42c12f79779b9c8/Rust">if let</a></p>
<p>5.<a href="https://gist.githubusercontent.com/41023146/15de079b794dee05ac223ecf370f7afa/raw/b4f3e3289af9ba465d25d385bda257354ed09f31/Rust">練習一</a></p>
<p>(1/1!+1/2!+1/3!+......+1/10!)</p>
<p>6.<a href="https://gist.githubusercontent.com/41023146/ddfa2374e1ef122b8ec5b8ea42bebf21/raw/f87750cbcb4b2b8729ca8fa76f93df6c25e35b9c/Rust">練習二</a></p>
<p>輸入(x,y)</p>
<p>輸出 1/x+(1/x)^2+(1/x)^3+.....+(1/x)^y</p><h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>w8</h1>
<p></p>
<p>1.請問如何設定 nginx, 讓其中所伺服的檔案只允許系上電腦下載?</p>
<p>    1.先進入nginx-1.20.2\conf目錄中找到nginx.conf將裡面http下的server改成:</p>
<div class="line number1 index0 alt2"><code class="js spaces">   </code><code class="js plain">server {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">       </code><code class="js plain">listen       [::]:88 ipv6only=off;</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">       </code><code class="js plain">listen       88;</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">    </code> </div>
<div class="line number5 index4 alt2"><code class="js spaces">       </code><code class="js preprocessor">#allow 140.130.XX.0/24;</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">       </code><code class="js plain">allow 2001:288:6004:XX::0/32;</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">       </code><code class="js plain">deny all;</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">    </code> </div>
<div class="line number9 index8 alt2"><code class="js spaces">       </code><code class="js plain">location / {</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">           </code><code class="js plain">root C:/pj2022/nginx-1.20.2/spring2022;</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">       </code><code class="js plain">}</code></div>
<div class="line number13 index12 alt2"><code class="js spaces">       </code><code class="js plain">autoindex on;</code></div>
<div class="line number14 index13 alt1"><code class="js plain">   }</code></div>
<p></p>
<p></p>
<p>2.請問如何利用 gpg4win 查驗所下載的 nginx 檔案與官方網站所附的數位簽章吻合?</p>
<p>    1.下載gpg4win</p>
<p>    2.打開Kleopatra用(解密/檢查)打開nginx-1.20.2.zip,查看它的ID</p>
<p>    3.再去官網下載檔案旁邊的pgp檔看兩者的ID是否一樣</p>
<p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData" height="630" muted="true" width="1008">
<source src="/downloads/w4_wifi/w4_wifi.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h1>midterm</h1>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData" height="630" muted="true" width="1008">
<source src="/downloads/w8_project.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h1>progress rate</h1>
<p><strong>week1</strong></p>
<p>1.<span>電腦輔助設計室IPv6 網路設定</span></p>
<p><span>2.創建wcm2022倉儲</span></p>
<p><strong>week2</strong></p>
<p>1.添加Rust頁面</p>
<p><strong>week3</strong></p>
<p>1.學習建立可攜系統</p>
<p><strong>week4</strong></p>
<p>1.討論同學倉儲為什麼無法添加cmsimde</p>
<p><strong>week5</strong></p>
<p>1.無</p>
<p><strong>week6</strong></p>
<p>1.無</p>
<p><strong>week7</strong></p>
<p>1.學習如何設定nginx</p>
<p>2.用gpg4win查看下載的檔案的數位簽證</p><h1>run</h1>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
def helloWorld():
    print("Hello World!")
helloWorld()
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
doc["keyword"].bind('click', kw1.prog)
</script>
</p>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/5d5b274e44ba3400046ad7d104a4c511/raw/a47a4054d2176c2d5b9ec617c078b804d2e89ea2/hw%25201-1"
src = open(url).read()
hw1_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_1"].bind("click", hw1_1.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/748bad2208b682b9670350a061ee10e9/raw/f31c6bb040e3775b1107a6cc68c7dc08c3073e6b/hw%25201-2"
src = open(url).read()
hw1_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["hw1_2"].bind("click", hw1_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/4eccbd34047b3c1a45534746edb56844/raw/a463241ee38da4de2e387ddc5c4837e9aad647e9/gistfile1.txt"
src = open(url).read()
貪食蛇 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["貪食蛇"].bind("click", 貪食蛇.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/8fc4aea4b6bef6ac45d86914851660ca/raw/bea14c49d7dee0f2e283e37190745e0446eb959f/w14"
src = open(url).read()
ai_snake = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["ai_snake"].bind("click", ai_snake.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/7430e7cd08724dbd831408fb8ead0f8d/raw/e06d0bedd22d0b5c74cfe8fc04d02f9fbd468ad5/a%25E5%258A%25A0%25E5%2588%25B0b"
src = open(url).read()
a_to_b = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["a_to_b"].bind("click", a_to_b.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/8d18ed1cdd15e4668b7c6c60e73f67bf/raw/b7a10cf0dc9f31d3058c023e833c378012bfe1c1/w13"
src = open(url).read()
w13 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13"].bind("click", w13.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/1ebbd8e6257dfb60182d29e6a9aaff00/raw/463bbe624e68ddb62b6b26a50253afd8def6e8a6/w13-2"
src = open(url).read()
w13_2 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13_2"].bind("click", w13_2.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/4e438641ea1dd0b2bd3ed476df6f020d/raw/09bc6cb4433ab6eb737e4d388ee289f478448312/w13"
src = open(url).read()
w13_3 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13_3"].bind("click", w13_3.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/d4f132d12c1e443f7ac47d8ef1d60a5a/raw/b4557beb918661a3084fcf9cf001f021f6df15ec/w13-4"
src = open(url).read()
w13_4 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w13_4"].bind("click", w13_4.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/e3e9cfdea42eb4cffd968ffe410153fd/raw/33b0593ac0b11f45cdb72a4c459cdfbf4995d3c9/Python"
src = open(url).read()
w14 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w14"].bind("click", w14.prog)
</script>
<script type="text/python3">
import beditor
from browser import document
url = "https://gist.githubusercontent.com/41023146/5fdbfdecc23d31559952df0e905c4392/raw/7ee9de5468d26f8e77c944c0db83d5e971123cd8/Python"
src = open(url).read()
w14_1 = beditor.editor(src, "kw_editor", "kw_console", "kw__container", "kw_py_src")
document["w14_1"].bind("click", w14_1.prog)
</script>
<p><button id="keyword">Keyword</button><button id="hw1_1">hw1_1</button><button id="hw1_2">hw1_2</button><button id="貪食蛇">snake</button><button id="ai_snake">ai_snake</button><button id="a_to_b">a_to_b</button><button id="w13">w13</button><button id="w13_2">畫表格</button><button id="w13_3">隨機生成方格</button><button id="w13_4">隨機生成方格plus</button><button id="w14">簡易計算機</button><button id="w14_1">猜數字遊戲</button></p>
<h3>runsrc</h3>
<p></p>
<p>(<a href="https://raw.githubusercontent.com/41023146/cp2021_hw/main/downloads/run.txt">run.txt</a>)</p>